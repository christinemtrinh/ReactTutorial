{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Christine Trinh\\\\Programming\\\\ReactTutorial\\\\ReactTutorial\\\\first-react-app\\\\src\\\\components\\\\ExpenseItem.js\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport \"./ExpenseItem.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExpenseItem(props) {\n  // ISSUE 1: Can only return a single element.. trying to return the following gives an error\n  /*\r\n    <div>Date</div>\r\n    <div><h2>Title</h2></div>\r\n    <div>Amount</div>\r\n    */\n  // Work around: Wrap everything into a single <div>\n  //className is defined by the JSX designers which links the styling\n\n  //-----------------------------------------------------------------------------//\n\n  // ISSUE 2: We want to make our data dynamic rather than hard coded.\n  // Use curly braces around the variable name to insert const, or more generally, JS code i.e. {1+1} to display 2\n  /* COMMENTED OUT BELOW BECAUSE UNUSED\r\n  const expenseDate = new Date(2021, 2, 28);\r\n  const expenseTitle = 'Car Insurance';\r\n  const expenseAmount = 294.67;\r\n  */\n\n  //-----------------------------------------------------------------------------//\n\n  // ISSUE 3: We want to pass in data from a parent component.. We will use parameters to get this. Rename the function to accept an arg.\n  // function ExpenseItem() --> ExpenseItem(props)\n  // Now can access them using the names specified in calling line: props.title, props.date, props.amount\n\n  //-----------------------------------------------------------------------------//\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expense-item\",\n    children: [/*#__PURE__*/_jsxDEV(ExpenseDate, {\n      date: props.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-item__description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-item__price\",\n        children: [\"$\", props.amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_c = ExpenseItem;\nexport default ExpenseItem;\nvar _c;\n$RefreshReg$(_c, \"ExpenseItem\");","map":{"version":3,"names":["ExpenseDate","jsxDEV","_jsxDEV","ExpenseItem","props","Card","className","children","date","fileName","_jsxFileName","lineNumber","columnNumber","title","amount","_c","$RefreshReg$"],"sources":["C:/Users/Christine Trinh/Programming/ReactTutorial/ReactTutorial/first-react-app/src/components/ExpenseItem.js"],"sourcesContent":["import ExpenseDate from \"./ExpenseDate\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nfunction ExpenseItem(props) {\r\n  // ISSUE 1: Can only return a single element.. trying to return the following gives an error\r\n  /*\r\n    <div>Date</div>\r\n    <div><h2>Title</h2></div>\r\n    <div>Amount</div>\r\n    */\r\n  // Work around: Wrap everything into a single <div>\r\n  //className is defined by the JSX designers which links the styling\r\n\r\n  //-----------------------------------------------------------------------------//\r\n\r\n  // ISSUE 2: We want to make our data dynamic rather than hard coded.\r\n  // Use curly braces around the variable name to insert const, or more generally, JS code i.e. {1+1} to display 2\r\n  /* COMMENTED OUT BELOW BECAUSE UNUSED\r\n  const expenseDate = new Date(2021, 2, 28);\r\n  const expenseTitle = 'Car Insurance';\r\n  const expenseAmount = 294.67;\r\n  */\r\n\r\n  //-----------------------------------------------------------------------------//\r\n\r\n  // ISSUE 3: We want to pass in data from a parent component.. We will use parameters to get this. Rename the function to accept an arg.\r\n  // function ExpenseItem() --> ExpenseItem(props)\r\n  // Now can access them using the names specified in calling line: props.title, props.date, props.amount\r\n\r\n  //-----------------------------------------------------------------------------//\r\n\r\n  return (\r\n    <Card className=\"expense-item\">\r\n      <ExpenseDate date={props.date}/>\r\n      <div className=\"expense-item__description\">\r\n        <h2>{props.title}</h2>\r\n        <div className=\"expense-item__price\">${props.amount}</div>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n"],"mappings":";AAAA,OAAOA,WAAW,MAAM,eAAe;AACvC,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,SAASC,WAAWA,CAACC,KAAK,EAAE;EAC1B;EACA;AACF;AACA;AACA;AACA;EACE;EACA;;EAEA;;EAEA;EACA;EACA;AACF;AACA;AACA;AACA;;EAEE;;EAEA;EACA;EACA;;EAEA;;EAEA,oBACEF,OAAA,CAACG,IAAI;IAACC,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC5BL,OAAA,CAACF,WAAW;MAACQ,IAAI,EAAEJ,KAAK,CAACI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAChCV,OAAA;MAAKI,SAAS,EAAC,2BAA2B;MAAAC,QAAA,gBACxCL,OAAA;QAAAK,QAAA,EAAKH,KAAK,CAACS;MAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACtBV,OAAA;QAAKI,SAAS,EAAC,qBAAqB;QAAAC,QAAA,GAAC,GAAC,EAACH,KAAK,CAACU,MAAM;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX;AAACG,EAAA,GArCQZ,WAAW;AAuCpB,eAAeA,WAAW;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Christine Trinh\\\\Programming\\\\ReactTutorial\\\\ReactTutorial\\\\first-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// Notice this JS code is returning HTML code, this is called JSX syntax\n// We can see the transformed code under Browser > Dev Tools (Fn + F12) > Sources > static/js\n\nimport React, { useState } from \"react\";\n\n// We import our custom component and use it like an HTML element\n// It must be capitalized so that HTML knows the element is custom type\n// import ExpenseItem from \"./components/ExpenseItem\"; No longer needed after adding 'Expense.js' component\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [expenses, setExpenses] = useState([{\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14)\n  }, {\n    id: \"e2\",\n    title: \"New TV\",\n    amount: 799.49,\n    date: new Date(2021, 2, 12)\n  }, {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28)\n  }, {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12)\n  }]);\n  setExpenses = prevState => {\n    return prevState.append();\n  };\n\n  // We have brought the data from ExpenseForm up to here, we need to lift the state up\n  // to the lowest component of the tree that has both data generator and data user\n  const saveNewExpenseHandler = expenseData => {\n    expenses.append(expenseData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Let's get started!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewExpense, {\n      onSaveNewExpense: saveNewExpenseHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Expenses, {\n      expenseList: expenses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Xyij49zdpWp+STCU0a877QtONBs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Expenses","NewExpense","jsxDEV","_jsxDEV","App","_s","expenses","setExpenses","id","title","amount","date","Date","prevState","append","saveNewExpenseHandler","expenseData","children","fileName","_jsxFileName","lineNumber","columnNumber","onSaveNewExpense","expenseList","_c","$RefreshReg$"],"sources":["C:/Users/Christine Trinh/Programming/ReactTutorial/ReactTutorial/first-react-app/src/App.js"],"sourcesContent":["// Notice this JS code is returning HTML code, this is called JSX syntax\n// We can see the transformed code under Browser > Dev Tools (Fn + F12) > Sources > static/js\n\nimport React, { useState } from \"react\";\n\n// We import our custom component and use it like an HTML element\n// It must be capitalized so that HTML knows the element is custom type\n// import ExpenseItem from \"./components/ExpenseItem\"; No longer needed after adding 'Expense.js' component\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nfunction App() {\n  const [expenses, setExpenses] = useState([\n    {\n      id: \"e1\",\n      title: \"Toilet Paper\",\n      amount: 94.12,\n      date: new Date(2020, 7, 14),\n    },\n    { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n    {\n      id: \"e3\",\n      title: \"Car Insurance\",\n      amount: 294.67,\n      date: new Date(2021, 2, 28),\n    },\n    {\n      id: \"e4\",\n      title: \"New Desk (Wooden)\",\n      amount: 450,\n      date: new Date(2021, 5, 12),\n    },\n  ]);\n\n  setExpenses = (prevState) => {\n    return prevState.append()\n  }\n\n  // We have brought the data from ExpenseForm up to here, we need to lift the state up\n  // to the lowest component of the tree that has both data generator and data user\n  const saveNewExpenseHandler = (expenseData) => {\n    expenses.append(expenseData);\n  };\n\n  return (\n    <div>\n      <h2>Let's get started!</h2>\n      <NewExpense onSaveNewExpense={saveNewExpenseHandler} />\n      <Expenses expenseList={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AACA;AACA;AACA,OAAOC,QAAQ,MAAM,gCAAgC;AACrD,OAAOC,UAAU,MAAM,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC5D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,CACvC;IACES,EAAE,EAAE,IAAI;IACRC,KAAK,EAAE,cAAc;IACrBC,MAAM,EAAE,KAAK;IACbC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;EAC5B,CAAC,EACD;IAAEJ,EAAE,EAAE,IAAI;IAAEC,KAAK,EAAE,QAAQ;IAAEC,MAAM,EAAE,MAAM;IAAEC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;EAAE,CAAC,EAC1E;IACEJ,EAAE,EAAE,IAAI;IACRC,KAAK,EAAE,eAAe;IACtBC,MAAM,EAAE,MAAM;IACdC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;EAC5B,CAAC,EACD;IACEJ,EAAE,EAAE,IAAI;IACRC,KAAK,EAAE,mBAAmB;IAC1BC,MAAM,EAAE,GAAG;IACXC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;EAC5B,CAAC,CACF,CAAC;EAEFL,WAAW,GAAIM,SAAS,IAAK;IAC3B,OAAOA,SAAS,CAACC,MAAM,CAAC,CAAC;EAC3B,CAAC;;EAED;EACA;EACA,MAAMC,qBAAqB,GAAIC,WAAW,IAAK;IAC7CV,QAAQ,CAACQ,MAAM,CAACE,WAAW,CAAC;EAC9B,CAAC;EAED,oBACEb,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BlB,OAAA,CAACF,UAAU;MAACqB,gBAAgB,EAAEP;IAAsB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvDlB,OAAA,CAACH,QAAQ;MAACuB,WAAW,EAAEjB;IAAS;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEV;AAAChB,EAAA,CAxCQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}